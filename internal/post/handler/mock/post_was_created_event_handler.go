// Code generated by MockGen. DO NOT EDIT.
// Source: post_was_created_event_handler.go

// Package mock_post_handler is a generated GoMock package.
package mock_post_handler

import (
	post "readmodels/internal/post"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPostWasCreatedEventService is a mock of PostWasCreatedEventService interface.
type MockPostWasCreatedEventService struct {
	ctrl     *gomock.Controller
	recorder *MockPostWasCreatedEventServiceMockRecorder
}

// MockPostWasCreatedEventServiceMockRecorder is the mock recorder for MockPostWasCreatedEventService.
type MockPostWasCreatedEventServiceMockRecorder struct {
	mock *MockPostWasCreatedEventService
}

// NewMockPostWasCreatedEventService creates a new mock instance.
func NewMockPostWasCreatedEventService(ctrl *gomock.Controller) *MockPostWasCreatedEventService {
	mock := &MockPostWasCreatedEventService{ctrl: ctrl}
	mock.recorder = &MockPostWasCreatedEventServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPostWasCreatedEventService) EXPECT() *MockPostWasCreatedEventServiceMockRecorder {
	return m.recorder
}

// CreateNewPostMetadata mocks base method.
func (m *MockPostWasCreatedEventService) CreateNewPostMetadata(data *post.PostMetadata) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateNewPostMetadata", data)
}

// CreateNewPostMetadata indicates an expected call of CreateNewPostMetadata.
func (mr *MockPostWasCreatedEventServiceMockRecorder) CreateNewPostMetadata(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewPostMetadata", reflect.TypeOf((*MockPostWasCreatedEventService)(nil).CreateNewPostMetadata), data)
}
