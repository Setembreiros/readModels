// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_userprofile is a generated GoMock package.
package mock_userprofile

import (
	model "readmodels/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// AddNewUserProfile mocks base method.
func (m *MockRepository) AddNewUserProfile(data *model.UserProfile) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddNewUserProfile", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddNewUserProfile indicates an expected call of AddNewUserProfile.
func (mr *MockRepositoryMockRecorder) AddNewUserProfile(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNewUserProfile", reflect.TypeOf((*MockRepository)(nil).AddNewUserProfile), data)
}

// DecreaseFollowees mocks base method.
func (m *MockRepository) DecreaseFollowees(username string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecreaseFollowees", username)
	ret0, _ := ret[0].(error)
	return ret0
}

// DecreaseFollowees indicates an expected call of DecreaseFollowees.
func (mr *MockRepositoryMockRecorder) DecreaseFollowees(username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecreaseFollowees", reflect.TypeOf((*MockRepository)(nil).DecreaseFollowees), username)
}

// DecreaseFollowers mocks base method.
func (m *MockRepository) DecreaseFollowers(username string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecreaseFollowers", username)
	ret0, _ := ret[0].(error)
	return ret0
}

// DecreaseFollowers indicates an expected call of DecreaseFollowers.
func (mr *MockRepositoryMockRecorder) DecreaseFollowers(username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecreaseFollowers", reflect.TypeOf((*MockRepository)(nil).DecreaseFollowers), username)
}

// GetUserProfile mocks base method.
func (m *MockRepository) GetUserProfile(username string) (*model.UserProfile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserProfile", username)
	ret0, _ := ret[0].(*model.UserProfile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserProfile indicates an expected call of GetUserProfile.
func (mr *MockRepositoryMockRecorder) GetUserProfile(username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserProfile", reflect.TypeOf((*MockRepository)(nil).GetUserProfile), username)
}

// IncreaseFollowees mocks base method.
func (m *MockRepository) IncreaseFollowees(username string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncreaseFollowees", username)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncreaseFollowees indicates an expected call of IncreaseFollowees.
func (mr *MockRepositoryMockRecorder) IncreaseFollowees(username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncreaseFollowees", reflect.TypeOf((*MockRepository)(nil).IncreaseFollowees), username)
}

// IncreaseFollowers mocks base method.
func (m *MockRepository) IncreaseFollowers(username string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncreaseFollowers", username)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncreaseFollowers indicates an expected call of IncreaseFollowers.
func (mr *MockRepositoryMockRecorder) IncreaseFollowers(username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncreaseFollowers", reflect.TypeOf((*MockRepository)(nil).IncreaseFollowers), username)
}

// UpdateUserProfile mocks base method.
func (m *MockRepository) UpdateUserProfile(data *model.UserProfile) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateUserProfile", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateUserProfile indicates an expected call of UpdateUserProfile.
func (mr *MockRepositoryMockRecorder) UpdateUserProfile(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUserProfile", reflect.TypeOf((*MockRepository)(nil).UpdateUserProfile), data)
}
