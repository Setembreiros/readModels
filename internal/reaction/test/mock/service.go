// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_reaction is a generated GoMock package.
package mock_reaction

import (
	model "readmodels/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// CreateLikePost mocks base method.
func (m *MockRepository) CreateLikePost(data *model.LikePost) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLikePost", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateLikePost indicates an expected call of CreateLikePost.
func (mr *MockRepositoryMockRecorder) CreateLikePost(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLikePost", reflect.TypeOf((*MockRepository)(nil).CreateLikePost), data)
}

// CreateSuperlikePost mocks base method.
func (m *MockRepository) CreateSuperlikePost(data *model.SuperlikePost) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSuperlikePost", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateSuperlikePost indicates an expected call of CreateSuperlikePost.
func (mr *MockRepositoryMockRecorder) CreateSuperlikePost(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSuperlikePost", reflect.TypeOf((*MockRepository)(nil).CreateSuperlikePost), data)
}

// DeleteLikePost mocks base method.
func (m *MockRepository) DeleteLikePost(data *model.LikePost) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteLikePost", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteLikePost indicates an expected call of DeleteLikePost.
func (mr *MockRepositoryMockRecorder) DeleteLikePost(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteLikePost", reflect.TypeOf((*MockRepository)(nil).DeleteLikePost), data)
}

// DeleteSuperlikePost mocks base method.
func (m *MockRepository) DeleteSuperlikePost(data *model.SuperlikePost) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSuperlikePost", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSuperlikePost indicates an expected call of DeleteSuperlikePost.
func (mr *MockRepositoryMockRecorder) DeleteSuperlikePost(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSuperlikePost", reflect.TypeOf((*MockRepository)(nil).DeleteSuperlikePost), data)
}
