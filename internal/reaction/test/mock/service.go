// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_reaction is a generated GoMock package.
package mock_reaction

import (
	model "readmodels/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// CreatePostLike mocks base method.
func (m *MockRepository) CreatePostLike(data *model.PostLike) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePostLike", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreatePostLike indicates an expected call of CreatePostLike.
func (mr *MockRepositoryMockRecorder) CreatePostLike(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePostLike", reflect.TypeOf((*MockRepository)(nil).CreatePostLike), data)
}

// CreatePostSuperlike mocks base method.
func (m *MockRepository) CreatePostSuperlike(data *model.PostSuperlike) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePostSuperlike", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreatePostSuperlike indicates an expected call of CreatePostSuperlike.
func (mr *MockRepositoryMockRecorder) CreatePostSuperlike(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePostSuperlike", reflect.TypeOf((*MockRepository)(nil).CreatePostSuperlike), data)
}

// DeletePostLike mocks base method.
func (m *MockRepository) DeletePostLike(data *model.PostLike) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePostLike", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeletePostLike indicates an expected call of DeletePostLike.
func (mr *MockRepositoryMockRecorder) DeletePostLike(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePostLike", reflect.TypeOf((*MockRepository)(nil).DeletePostLike), data)
}

// DeletePostSuperlike mocks base method.
func (m *MockRepository) DeletePostSuperlike(data *model.PostSuperlike) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePostSuperlike", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeletePostSuperlike indicates an expected call of DeletePostSuperlike.
func (mr *MockRepositoryMockRecorder) DeletePostSuperlike(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePostSuperlike", reflect.TypeOf((*MockRepository)(nil).DeletePostSuperlike), data)
}
