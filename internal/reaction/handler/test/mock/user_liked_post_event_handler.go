// Code generated by MockGen. DO NOT EDIT.
// Source: user_liked_post_event_handler.go

// Package mock_reaction_handler is a generated GoMock package.
package mock_reaction_handler

import (
	model "readmodels/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserLikedPostEventService is a mock of UserLikedPostEventService interface.
type MockUserLikedPostEventService struct {
	ctrl     *gomock.Controller
	recorder *MockUserLikedPostEventServiceMockRecorder
}

// MockUserLikedPostEventServiceMockRecorder is the mock recorder for MockUserLikedPostEventService.
type MockUserLikedPostEventServiceMockRecorder struct {
	mock *MockUserLikedPostEventService
}

// NewMockUserLikedPostEventService creates a new mock instance.
func NewMockUserLikedPostEventService(ctrl *gomock.Controller) *MockUserLikedPostEventService {
	mock := &MockUserLikedPostEventService{ctrl: ctrl}
	mock.recorder = &MockUserLikedPostEventServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserLikedPostEventService) EXPECT() *MockUserLikedPostEventServiceMockRecorder {
	return m.recorder
}

// CreateLikePost mocks base method.
func (m *MockUserLikedPostEventService) CreateLikePost(data *model.LikePost) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateLikePost", data)
}

// CreateLikePost indicates an expected call of CreateLikePost.
func (mr *MockUserLikedPostEventServiceMockRecorder) CreateLikePost(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLikePost", reflect.TypeOf((*MockUserLikedPostEventService)(nil).CreateLikePost), data)
}
