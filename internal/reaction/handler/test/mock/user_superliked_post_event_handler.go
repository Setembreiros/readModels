// Code generated by MockGen. DO NOT EDIT.
// Source: user_superliked_post_event_handler.go

// Package mock_reaction_handler is a generated GoMock package.
package mock_reaction_handler

import (
	model "readmodels/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserSuperlikedPostEventService is a mock of UserSuperlikedPostEventService interface.
type MockUserSuperlikedPostEventService struct {
	ctrl     *gomock.Controller
	recorder *MockUserSuperlikedPostEventServiceMockRecorder
}

// MockUserSuperlikedPostEventServiceMockRecorder is the mock recorder for MockUserSuperlikedPostEventService.
type MockUserSuperlikedPostEventServiceMockRecorder struct {
	mock *MockUserSuperlikedPostEventService
}

// NewMockUserSuperlikedPostEventService creates a new mock instance.
func NewMockUserSuperlikedPostEventService(ctrl *gomock.Controller) *MockUserSuperlikedPostEventService {
	mock := &MockUserSuperlikedPostEventService{ctrl: ctrl}
	mock.recorder = &MockUserSuperlikedPostEventServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserSuperlikedPostEventService) EXPECT() *MockUserSuperlikedPostEventServiceMockRecorder {
	return m.recorder
}

// CreateSuperlikePost mocks base method.
func (m *MockUserSuperlikedPostEventService) CreateSuperlikePost(data *model.SuperlikePost) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateSuperlikePost", data)
}

// CreateSuperlikePost indicates an expected call of CreateSuperlikePost.
func (mr *MockUserSuperlikedPostEventServiceMockRecorder) CreateSuperlikePost(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSuperlikePost", reflect.TypeOf((*MockUserSuperlikedPostEventService)(nil).CreateSuperlikePost), data)
}
