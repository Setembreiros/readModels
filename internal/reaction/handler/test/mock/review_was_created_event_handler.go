// Code generated by MockGen. DO NOT EDIT.
// Source: review_was_created_event_handler.go

// Package mock_reaction_handler is a generated GoMock package.
package mock_reaction_handler

import (
	model "readmodels/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockReviewWasCreatedEventService is a mock of ReviewWasCreatedEventService interface.
type MockReviewWasCreatedEventService struct {
	ctrl     *gomock.Controller
	recorder *MockReviewWasCreatedEventServiceMockRecorder
}

// MockReviewWasCreatedEventServiceMockRecorder is the mock recorder for MockReviewWasCreatedEventService.
type MockReviewWasCreatedEventServiceMockRecorder struct {
	mock *MockReviewWasCreatedEventService
}

// NewMockReviewWasCreatedEventService creates a new mock instance.
func NewMockReviewWasCreatedEventService(ctrl *gomock.Controller) *MockReviewWasCreatedEventService {
	mock := &MockReviewWasCreatedEventService{ctrl: ctrl}
	mock.recorder = &MockReviewWasCreatedEventServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReviewWasCreatedEventService) EXPECT() *MockReviewWasCreatedEventServiceMockRecorder {
	return m.recorder
}

// CreateReview mocks base method.
func (m *MockReviewWasCreatedEventService) CreateReview(data *model.Review) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateReview", data)
}

// CreateReview indicates an expected call of CreateReview.
func (mr *MockReviewWasCreatedEventServiceMockRecorder) CreateReview(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateReview", reflect.TypeOf((*MockReviewWasCreatedEventService)(nil).CreateReview), data)
}
