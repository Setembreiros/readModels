// Code generated by MockGen. DO NOT EDIT.
// Source: user_unliked_post_event_handler.go

// Package mock_reaction_handler is a generated GoMock package.
package mock_reaction_handler

import (
	model "readmodels/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserUnlikedPostEventService is a mock of UserUnlikedPostEventService interface.
type MockUserUnlikedPostEventService struct {
	ctrl     *gomock.Controller
	recorder *MockUserUnlikedPostEventServiceMockRecorder
}

// MockUserUnlikedPostEventServiceMockRecorder is the mock recorder for MockUserUnlikedPostEventService.
type MockUserUnlikedPostEventServiceMockRecorder struct {
	mock *MockUserUnlikedPostEventService
}

// NewMockUserUnlikedPostEventService creates a new mock instance.
func NewMockUserUnlikedPostEventService(ctrl *gomock.Controller) *MockUserUnlikedPostEventService {
	mock := &MockUserUnlikedPostEventService{ctrl: ctrl}
	mock.recorder = &MockUserUnlikedPostEventServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserUnlikedPostEventService) EXPECT() *MockUserUnlikedPostEventServiceMockRecorder {
	return m.recorder
}

// DeletePostLike mocks base method.
func (m *MockUserUnlikedPostEventService) DeletePostLike(data *model.PostLike) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeletePostLike", data)
}

// DeletePostLike indicates an expected call of DeletePostLike.
func (mr *MockUserUnlikedPostEventServiceMockRecorder) DeletePostLike(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePostLike", reflect.TypeOf((*MockUserUnlikedPostEventService)(nil).DeletePostLike), data)
}
